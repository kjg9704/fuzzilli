// ===== [ Program FCB65693-5B5C-40C0-B4DE-F7B8665A68E2 ] =====
// RUNNER ARGS: ../gecko-dev/obj-fuzzbuild/dist/bin/js --baseline-warmup-threshold=10 --ion-warmup-threshold=100 --ion-check-range-analysis --ion-extra-checks --fuzzing-safe --disable-oom-functions --reprl
// Start of prefix code
// Executing code generator StringGenerator
v0 <- LoadString 'padStart'
v1 <- LoadString 'm'
v2 <- LoadString 'sinh'
// Code generator finished
// Executing code generator IntArrayGenerator
v3 <- CreateIntArray [-2147483649, 8, 35193, -6, -16, 5403, -2007378117]
v4 <- CreateIntArray [4096]
v5 <- CreateIntArray [-796022773, 416722967]
// Code generator finished
// Executing code generator ObjectConstructorGenerator
v6 <- BeginConstructor -> v7, v8, v9, v10
    SetProperty v7, 'e', v5
EndConstructor
v11 <- Construct v6, [v1, v4, v5]
v12 <- Construct v6, [v11, v3, v3]
v13 <- Construct v6, [v6, v3, v4]
// Code generator finished
// Executing code generator IntArrayGenerator
v14 <- CreateIntArray [3, -9223372036854775808, -9007199254740992, 4096, -256, 4294967296, 3032789, -36801]
v15 <- CreateIntArray [-49741]
v16 <- CreateIntArray [-268435456, 6, 12, 678634409]
// Code generator finished
// End of prefix code. 13 variables are now visible
// Executing code generator CompareWithIfElseGenerator
v17 <- Compare v0, '==', v16
BeginIf v17
    // Executing code generator ApiMethodCallGenerator
    BeginTry
        v18 <- CallMethod v4, 'reduceRight', [v5]
    BeginCatch -> v19
    EndTryCatch
    // Code generator finished
BeginElse
    // Executing code generator MethodCallGenerator
    v20 <- CallMethod (guarded) v3, 'some', [v14]
    // Code generator finished
    // Executing code generator BinaryOperationGenerator
    v21 <- BinaryOperation v16, '&', v20
    // Code generator finished
EndIf
// Program may be interesting due to new coverage: 150 newly discovered edges in the CFG of the target


// ===== [ Program B5407A6E-3A92-411A-A29E-6CDE3EDB8F66 ] =====
// Minimizing FCB65693-5B5C-40C0-B4DE-F7B8665A68E2
v0 <- LoadString 'padStart'
v1 <- CreateIntArray [-2147483649, 8, 35193, -6, -16, 5403, -2007378117]
v2 <- CreateIntArray [3, -9223372036854775808, -9007199254740992, 4096, -256, 4294967296, 3032789, -36801]
v3 <- CreateIntArray [-268435456, 6, 12, 678634409]
v4 <- Compare v0, '==', v3
BeginIf v4
    BeginTry
    BeginCatch -> v5
    EndTryCatch
BeginElse
    v6 <- CallMethod (guarded) v1, 'some', [v2]
    v7 <- BinaryOperation v3, '&', v6
EndIf
// Program is interesting due to new coverage: 103 newly discovered edges in the CFG of the target



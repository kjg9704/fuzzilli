function main() {
const v3 = [1000000.0,1000000.0,1000000.0];
function v4(v5,v6) {
    const v8 = [1337,1337];
    const v17 = Number();
    let v18 = undefined;
    const v21 = [1337,1337,-765470.5051836492];
    let v24 = 0;
    do {
        const v25 = v24 + 1;
        const v27 = Math.fround(v25,v21);
        v24 = v27;
        const v28 = [v25,v27,13.37];
        function v29(v30,v31,v32,v33,v34) {
            const v35 = 1337 <= v6;
            let v36 = v25;
            v36 = v27;
        }
        const v40 = v21.indexOf(v24,v27);
        for (let v44 = 0; v44 < 100; v44++) {
        }
    } while (v24 < 6);
    function v46(v47,v48) {
        function v50(v51,v52) {
            const v53 = {get:v50};
        }
        const v55 = v50(4,Reflect);
    }
    const v56 = new Promise(v46);
}
const v57 = v3.find(v4,Math);
const v61 = [13.37,"ignoreCase"];
const v62 = [];
const v63 = {imul:v62,cos:Atomics,MIN_SAFE_INTEGER:v61};
const v66 = {SQRT2:"number",getInt16:1337};
let v68 = v63;
let v72 = undefined;
const v75 = [-25679.22469149914,-25679.22469149914];
const v76 = v75.__proto__;
const v78 = v76.push(8,3840936667);
const v82 = v4(v66,2410397065);
}
%NeverOptimizeFunction(main);
main();

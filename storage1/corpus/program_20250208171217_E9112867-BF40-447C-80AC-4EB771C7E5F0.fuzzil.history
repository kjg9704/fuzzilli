// ===== [ Program DC15F173-2498-422B-A214-0EB8FFF175D4 ] =====
// Generating program based on PoC + Template
// RUNNER ARGS: ../gecko-dev/obj-fuzzbuild/dist/bin/js --baseline-warmup-threshold=10 --ion-warmup-threshold=100 --ion-check-range-analysis --ion-extra-checks --fuzzing-safe --disable-oom-functions --reprl
v0 <- CreateNamedVariable 'Intl', 'none'
v1 <- GetProperty v0, 'Segmenter'
v2 <- Construct v1, []
v3 <- CreateNamedVariable 'segmenter', 'let', v2
v4 <- LoadUndefined
v5 <- CallMethod v3, 'segment', [v4]
v6 <- CreateNamedVariable 'segments', 'let', v5
BeginForOfLoop v6 -> v7
    v8 <- CreateNamedVariable 'gc', 'none'
    v9 <- CallFunction v8, []
    Reassign v6, v9
EndForOfLoop
// Start of prefix code
// Executing code generator ClassDefinitionGenerator
v10 <- BeginClassDefinition
    // Executing code generator ClassPrivateStaticMethodGenerator
    BeginClassPrivateStaticMethod 'valueOf' -> v11, v12, v13
        // Executing code generator SuperPropertyAssignmentGenerator
        SetSuperProperty 'd', v13
        // Code generator finished
        // Executing code generator BinaryOperationGenerator
        v14 <- BinaryOperation v11, '>>', v2
        // Code generator finished
        // Executing code generator NumberComputationGenerator
        v15 <- CreateNamedVariable 'Math', 'none'
        v16 <- LoadInteger '-1659061981'
        v17 <- LoadInteger '-9'
        v18 <- UnaryOperation '++', v16
        v19 <- UnaryOperation '~', v0
        v20 <- CallMethod v15, 'tanh', [v0]
        v21 <- CallMethod v15, 'pow', [v18, v18]
        v22 <- BinaryOperation v0, '**', v17
        v23 <- BinaryOperation v18, '*', v22
        v24 <- BinaryOperation v16, '*', v18
        // Code generator finished
        Return v21
    EndClassPrivateStaticMethod
    // Code generator finished
EndClassDefinition
v25 <- Construct v10, []
v26 <- Construct v10, []
v27 <- Construct v10, []
// Code generator finished
// Executing code generator TypedArrayGenerator
v28 <- LoadInteger '1729'
v29 <- CreateNamedVariable 'Int32Array', 'none'
v30 <- Construct v29, [v28]
v31 <- LoadInteger '171'
v32 <- CreateNamedVariable 'Int16Array', 'none'
v33 <- Construct v32, [v31]
v34 <- LoadInteger '8'
v35 <- CreateNamedVariable 'Int32Array', 'none'
v36 <- Construct v35, [v34]
// Code generator finished
// End of prefix code. 20 variables are now visible
// Splicing instruction 67 (CallMethod) from B6AE921D-7137-48DD-ACF4-866EC467809D
v37 <- LoadInteger '512'
v38 <- CreateNamedVariable 'Math', 'none'
v39 <- UnaryOperation '+', v37
v40 <- CallMethod v38, 'acosh', [v39]
// Splicing done
// Executing code generator DestructArrayAndReassignGenerator
[v29,v10] <- DestructArrayAndReassign v33
// Code generator finished
v41 <- BeginPlainFunction -> v42, v43
    // Splicing instruction 3 (CallFunctionWithSpread) from E8487E14-6726-4692-841D-7C683D2E6E05
    v44 <- LoadInteger '1'
    v45 <- LoadInteger '65537'
    v46 <- CreateNamedVariable 'Map', 'none'
    v47 <- CallFunctionWithSpread (guarded) v46, [v44, ...v45]
    // Splicing done
    // Executing code generator StringGenerator
    v48 <- LoadString 'JpC'
    v49 <- LoadString 'unscopables'
    v50 <- LoadString 'EPSILON'
    // Code generator finished
    // Splicing instruction 11 (CreateArray) from 1F1B9CF2-B415-4828-8D66-FBDD35A5DD42
    v51 <- BeginConstructor -> v52
    EndConstructor
    v53 <- CreateArray [v51]
    // Splicing done
    // Executing code generator ElementAssignmentGenerator
    SetElement v53, '3', v34
    // Code generator finished
    // Splicing instruction 1 (CallFunction) from 37BD68CF-B4D7-480C-A356-CB83BA7EE4F4
    v54 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
    v55 <- CallFunction (guarded) v54, []
    // Splicing done
    // Executing code generator AsyncFunctionGenerator
    v56 <- BeginAsyncFunction -> v57, v58
        // Splicing instruction 2 (Construct) from E6D3CBEB-5973-4C0C-8886-CC9C973062D4
        v59 <- LoadInteger '2628'
        v60 <- CreateNamedVariable 'BigUint64Array', 'none'
        v61 <- Construct v60, [v59]
        // Splicing done
        // Splicing instruction 3 (Reassign) from 4783DD2F-BCAD-40E2-AC27-C7B040E96D4B
        v62 <- CreateNamedVariable 'SyntaxError', 'none'
        Reassign v61, v62
        // Splicing done
        // Splicing instruction 20 (BeginForInLoop) from A70BDAF2-2A9C-4DA6-8642-A07AB13051DB
        v63 <- BeginPlainFunction -> 
            v64 <- LoadFloat '4.0'
            v65 <- LoadString 'flags'
            v66 <- LoadInteger '65537'
            BeginObjectLiteral
                ObjectLiteralAddProperty `e`, v66
                ObjectLiteralAddProperty `f`, v64
                ObjectLiteralSetPrototype v65
                ObjectLiteralAddProperty `d`, v66
                BeginObjectLiteralComputedMethod v65 -> v67, v68, v69
                EndObjectLiteralComputedMethod
            v70 <- EndObjectLiteral
            Return v70
        EndPlainFunction
        v71 <- CallFunction v63, []
        BeginForInLoop v71 -> v72
        EndForInLoop
        // Splicing done
        v73 <- Await v63
        Return v73
    EndAsyncFunction
    v74 <- CallFunction v56, [v43, v38]
    // Code generator finished
    Return v55
EndPlainFunction
// Executing code generator IteratorGenerator
v75 <- CreateNamedVariable 'Symbol', 'none'
v76 <- GetProperty v75, 'iterator'
BeginObjectLiteral
    BeginObjectLiteralComputedMethod v76 -> v77
        v78 <- LoadInteger '10'
        BeginObjectLiteral
            BeginObjectLiteralMethod `next` -> v79
                v80 <- UnaryOperation v78, '--'
                v81 <- LoadInteger '0'
                v82 <- Compare v78, '==', v81
                BeginObjectLiteral
                    ObjectLiteralAddProperty `done`, v82
                    ObjectLiteralAddProperty `value`, v78
                v83 <- EndObjectLiteral
                Return v83
            EndObjectLiteralMethod
        v84 <- EndObjectLiteral
        Return v84
    EndObjectLiteralComputedMethod
v85 <- EndObjectLiteral
// Code generator finished
BeginRepeatLoop '100' -> v86
    v87 <- CallFunction v41, [v86, v25]
EndRepeatLoop
// Executing code generator PlainFunctionGenerator
v88 <- BeginPlainFunction -> v89, v90, v91, v92
    // Splicing instruction 13 (BinaryOperation) from 3FBF76FA-7578-495D-9E4A-F160E25DBEE8
    v93 <- CreateNamedVariable 'Uint8Array', 'none'
    v94 <- LoadString 'function'
    v95 <- BinaryOperation v93, '/', v94
    // Splicing done
    Return v27
EndPlainFunction
v96 <- CallFunction v88, [v30, v3, v39, v29]
// Code generator finished
v97 <- CallFunction v41, [v38, v0]
BeginRepeatLoop '100' -> v98
    v99 <- CallFunction v41, [v98, v36]
EndRepeatLoop
// Splicing instruction 4 (Construct) from CE196493-437C-4AFD-AFAD-ED0D4E8638AA
v100 <- CreateNamedVariable 'Int16Array', 'none'
v101 <- Construct v100, []
// Splicing done
// Executing code generator NumberComputationGenerator
v102 <- CreateNamedVariable 'Math', 'none'
v103 <- LoadInteger '328449041'
v104 <- BinaryOperation v37, '<<', v25
v105 <- BinaryOperation v25, '>>', v104
v106 <- UnaryOperation '++', v105
v107 <- BinaryOperation v103, '+', v103
v108 <- BinaryOperation v104, '^', v105
// Code generator finished
v109 <- CallFunction v41, [v88, v25]
// Program may be interesting due to new coverage: 675 newly discovered edges in the CFG of the target


// ===== [ Program E9112867-BF40-447C-80AC-4EB771C7E5F0 ] =====
// Minimizing DC15F173-2498-422B-A214-0EB8FFF175D4
v0 <- CreateNamedVariable 'Intl', 'none'
v1 <- GetProperty v0, 'Segmenter'
v2 <- Construct v1, [v1]
v3 <- CallMethod v2, 'segment', []
BeginForOfLoop v3 -> v4
EndForOfLoop
v5 <- BeginPlainFunction -> v6, v7
    v8 <- BeginAsyncFunction -> v9, v10
        v11 <- CreateNamedVariable 'BigUint64Array', 'none'
        v12 <- Construct v11, []
        v13 <- CreateNamedVariable 'SyntaxError', 'none'
        Reassign v12, v13
        v14 <- BeginPlainFunction -> 
            Return v7
        EndPlainFunction
        BeginForInLoop v14 -> v15
        EndForInLoop
        v16 <- Await v14
    EndAsyncFunction
    v17 <- CallFunction v8, [v1, v8]
    Return v0
EndPlainFunction
v18 <- CreateNamedVariable 'Symbol', 'none'
v19 <- GetProperty v18, 'iterator'
BeginObjectLiteral
    BeginObjectLiteralComputedMethod v19 -> v20
    EndObjectLiteralComputedMethod
v21 <- EndObjectLiteral
BeginRepeatLoop '100' -> v22
    v23 <- CallFunction v5, []
EndRepeatLoop
v24 <- BeginPlainFunction -> v25, v26, v27, v28
    v29 <- CreateNamedVariable 'Uint8Array', 'none'
    v30 <- LoadString 'function'
    v31 <- BinaryOperation v29, '/', v30
    Return v31
EndPlainFunction
v32 <- CallFunction v24, []
// Program is interesting due to new coverage: 471 newly discovered edges in the CFG of the target
// Imported program is interesting due to new coverage: 2 newly discovered edges in the CFG of the target



// ===== [ Program DC15F173-2498-422B-A214-0EB8FFF175D4 ] =====
// Generating program based on PoC + Template
// RUNNER ARGS: ../gecko-dev/obj-fuzzbuild/dist/bin/js --baseline-warmup-threshold=10 --ion-warmup-threshold=100 --ion-check-range-analysis --ion-extra-checks --fuzzing-safe --disable-oom-functions --reprl
v0 <- CreateNamedVariable 'Intl', 'none'
v1 <- GetProperty v0, 'Segmenter'
v2 <- Construct v1, []
v3 <- CreateNamedVariable 'segmenter', 'let', v2
v4 <- LoadUndefined
v5 <- CallMethod v3, 'segment', [v4]
v6 <- CreateNamedVariable 'segments', 'let', v5
BeginForOfLoop v6 -> v7
    v8 <- CreateNamedVariable 'gc', 'none'
    v9 <- CallFunction v8, []
    Reassign v6, v9
EndForOfLoop
// Start of prefix code
// Executing code generator ClassDefinitionGenerator
v10 <- BeginClassDefinition
    // Executing code generator ClassPrivateStaticMethodGenerator
    BeginClassPrivateStaticMethod 'valueOf' -> v11, v12, v13
        // Executing code generator SuperPropertyAssignmentGenerator
        SetSuperProperty 'd', v13
        // Code generator finished
        // Executing code generator BinaryOperationGenerator
        v14 <- BinaryOperation v11, '>>', v2
        // Code generator finished
        // Executing code generator NumberComputationGenerator
        v15 <- CreateNamedVariable 'Math', 'none'
        v16 <- LoadInteger '-1659061981'
        v17 <- LoadInteger '-9'
        v18 <- UnaryOperation '++', v16
        v19 <- UnaryOperation '~', v0
        v20 <- CallMethod v15, 'tanh', [v0]
        v21 <- CallMethod v15, 'pow', [v18, v18]
        v22 <- BinaryOperation v0, '**', v17
        v23 <- BinaryOperation v18, '*', v22
        v24 <- BinaryOperation v16, '*', v18
        // Code generator finished
        Return v21
    EndClassPrivateStaticMethod
    // Code generator finished
EndClassDefinition
v25 <- Construct v10, []
v26 <- Construct v10, []
v27 <- Construct v10, []
// Code generator finished
// Executing code generator TypedArrayGenerator
v28 <- LoadInteger '1729'
v29 <- CreateNamedVariable 'Int32Array', 'none'
v30 <- Construct v29, [v28]
v31 <- LoadInteger '171'
v32 <- CreateNamedVariable 'Int16Array', 'none'
v33 <- Construct v32, [v31]
v34 <- LoadInteger '8'
v35 <- CreateNamedVariable 'Int32Array', 'none'
v36 <- Construct v35, [v34]
// Code generator finished
// End of prefix code. 20 variables are now visible
// Splicing instruction 67 (CallMethod) from B6AE921D-7137-48DD-ACF4-866EC467809D
v37 <- LoadInteger '512'
v38 <- CreateNamedVariable 'Math', 'none'
v39 <- UnaryOperation '+', v37
v40 <- CallMethod v38, 'acosh', [v39]
// Splicing done
// Executing code generator DestructArrayAndReassignGenerator
[v29,v10] <- DestructArrayAndReassign v33
// Code generator finished
v41 <- BeginPlainFunction -> v42, v43
    // Splicing instruction 3 (CallFunctionWithSpread) from E8487E14-6726-4692-841D-7C683D2E6E05
    v44 <- LoadInteger '1'
    v45 <- LoadInteger '65537'
    v46 <- CreateNamedVariable 'Map', 'none'
    v47 <- CallFunctionWithSpread (guarded) v46, [v44, ...v45]
    // Splicing done
    // Executing code generator StringGenerator
    v48 <- LoadString 'JpC'
    v49 <- LoadString 'unscopables'
    v50 <- LoadString 'EPSILON'
    // Code generator finished
    // Splicing instruction 11 (CreateArray) from 1F1B9CF2-B415-4828-8D66-FBDD35A5DD42
    v51 <- BeginConstructor -> v52
    EndConstructor
    v53 <- CreateArray [v51]
    // Splicing done
    // Executing code generator ElementAssignmentGenerator
    SetElement v53, '3', v34
    // Code generator finished
    // Splicing instruction 1 (CallFunction) from 37BD68CF-B4D7-480C-A356-CB83BA7EE4F4
    v54 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
    v55 <- CallFunction (guarded) v54, []
    // Splicing done
    // Executing code generator AsyncFunctionGenerator
    v56 <- BeginAsyncFunction -> v57, v58
        // Splicing instruction 2 (Construct) from E6D3CBEB-5973-4C0C-8886-CC9C973062D4
        v59 <- LoadInteger '2628'
        v60 <- CreateNamedVariable 'BigUint64Array', 'none'
        v61 <- Construct v60, [v59]
        // Splicing done
        // Splicing instruction 3 (Reassign) from 4783DD2F-BCAD-40E2-AC27-C7B040E96D4B
        v62 <- CreateNamedVariable 'SyntaxError', 'none'
        Reassign v61, v62
        // Splicing done
        // Splicing instruction 20 (BeginForInLoop) from A70BDAF2-2A9C-4DA6-8642-A07AB13051DB
        v63 <- BeginPlainFunction -> 
            v64 <- LoadFloat '4.0'
            v65 <- LoadString 'flags'
            v66 <- LoadInteger '65537'
            BeginObjectLiteral
                ObjectLiteralAddProperty `e`, v66
                ObjectLiteralAddProperty `f`, v64
                ObjectLiteralSetPrototype v65
                ObjectLiteralAddProperty `d`, v66
                BeginObjectLiteralComputedMethod v65 -> v67, v68, v69
                EndObjectLiteralComputedMethod
            v70 <- EndObjectLiteral
            Return v70
        EndPlainFunction
        v71 <- CallFunction v63, []
        BeginForInLoop v71 -> v72
        EndForInLoop
        // Splicing done
        v73 <- Await v63
        Return v73
    EndAsyncFunction
    v74 <- CallFunction v56, [v43, v38]
    // Code generator finished
    Return v55
EndPlainFunction
// Executing code generator IteratorGenerator
v75 <- CreateNamedVariable 'Symbol', 'none'
v76 <- GetProperty v75, 'iterator'
BeginObjectLiteral
    BeginObjectLiteralComputedMethod v76 -> v77
        v78 <- LoadInteger '10'
        BeginObjectLiteral
            BeginObjectLiteralMethod `next` -> v79
                v80 <- UnaryOperation v78, '--'
                v81 <- LoadInteger '0'
                v82 <- Compare v78, '==', v81
                BeginObjectLiteral
                    ObjectLiteralAddProperty `done`, v82
                    ObjectLiteralAddProperty `value`, v78
                v83 <- EndObjectLiteral
                Return v83
            EndObjectLiteralMethod
        v84 <- EndObjectLiteral
        Return v84
    EndObjectLiteralComputedMethod
v85 <- EndObjectLiteral
// Code generator finished
BeginRepeatLoop '100' -> v86
    v87 <- CallFunction v41, [v86, v25]
EndRepeatLoop
// Executing code generator PlainFunctionGenerator
v88 <- BeginPlainFunction -> v89, v90, v91, v92
    // Splicing instruction 13 (BinaryOperation) from 3FBF76FA-7578-495D-9E4A-F160E25DBEE8
    v93 <- CreateNamedVariable 'Uint8Array', 'none'
    v94 <- LoadString 'function'
    v95 <- BinaryOperation v93, '/', v94
    // Splicing done
    Return v27
EndPlainFunction
v96 <- CallFunction v88, [v30, v3, v39, v29]
// Code generator finished
v97 <- CallFunction v41, [v38, v0]
BeginRepeatLoop '100' -> v98
    v99 <- CallFunction v41, [v98, v36]
EndRepeatLoop
// Splicing instruction 4 (Construct) from CE196493-437C-4AFD-AFAD-ED0D4E8638AA
v100 <- CreateNamedVariable 'Int16Array', 'none'
v101 <- Construct v100, []
// Splicing done
// Executing code generator NumberComputationGenerator
v102 <- CreateNamedVariable 'Math', 'none'
v103 <- LoadInteger '328449041'
v104 <- BinaryOperation v37, '<<', v25
v105 <- BinaryOperation v25, '>>', v104
v106 <- UnaryOperation '++', v105
v107 <- BinaryOperation v103, '+', v103
v108 <- BinaryOperation v104, '^', v105
// Code generator finished
v109 <- CallFunction v41, [v88, v25]
// Program may be interesting due to new coverage: 675 newly discovered edges in the CFG of the target


// ===== [ Program 4E6C8771-FB97-4F0A-976D-A905C92E6EB0 ] =====
// Mutating DC15F173-2498-422B-A214-0EB8FFF175D4 with FixupMutator
v0 <- CreateNamedVariable 'Intl', 'none'
v1 <- GetProperty v0, 'Segmenter'
v2 <- Construct v1, []
v3 <- CreateNamedVariable 'segmenter', 'let', v2
v4 <- LoadUndefined
v5 <- CallMethod v3, 'segment', [v4]
v6 <- CreateNamedVariable 'segments', 'let', v5
BeginForOfLoop v6 -> v7
    v8 <- CreateNamedVariable 'gc', 'none'
    v9 <- CallFunction v8, []
    Reassign v6, v9
EndForOfLoop
v10 <- BeginClassDefinition
    BeginClassPrivateStaticMethod 'valueOf' -> v11, v12, v13
        SetSuperProperty 'd', v13
        v14 <- BinaryOperation v11, '>>', v2
        v15 <- CreateNamedVariable 'Math', 'none'
        v16 <- LoadInteger '-1659061981'
        v17 <- LoadInteger '-9'
        v18 <- UnaryOperation '++', v16
        v19 <- UnaryOperation '~', v0
        v20 <- CallMethod v15, 'tanh', [v0]
        // Fixing next instruction
        v21 <- CallMethod v15, 'pow', [v18, v18]
        // Fixup done
        v22 <- BinaryOperation v0, '**', v17
        v23 <- BinaryOperation v18, '*', v22
        v24 <- BinaryOperation v16, '*', v18
        Return v21
    EndClassPrivateStaticMethod
EndClassDefinition
v25 <- Construct v10, []
v26 <- Construct v10, []
v27 <- Construct v10, []
v28 <- LoadInteger '1729'
v29 <- CreateNamedVariable 'Int32Array', 'none'
v30 <- Construct v29, [v28]
v31 <- LoadInteger '171'
v32 <- CreateNamedVariable 'Int16Array', 'none'
v33 <- Construct v32, [v31]
v34 <- LoadInteger '8'
v35 <- CreateNamedVariable 'Int32Array', 'none'
v36 <- Construct v35, [v34]
v37 <- LoadInteger '512'
v38 <- CreateNamedVariable 'Math', 'none'
v39 <- UnaryOperation '+', v37
v40 <- CallMethod v38, 'acosh', [v39]
[v29,v10] <- DestructArrayAndReassign v33
v41 <- BeginPlainFunction -> v42, v43
    v44 <- LoadInteger '1'
    v45 <- LoadInteger '65537'
    v46 <- CreateNamedVariable 'Map', 'none'
    v47 <- CallFunctionWithSpread (guarded) v46, [v44, ...v45]
    v48 <- LoadString 'JpC'
    v49 <- LoadString 'unscopables'
    v50 <- LoadString 'EPSILON'
    v51 <- BeginConstructor -> v52
    EndConstructor
    v53 <- CreateArray [v51]
    SetElement v53, '3', v34
    v54 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
    // Fixing next instruction
    v55 <- CallFunction (guarded) v54, []
    // Fixup done
    v56 <- BeginAsyncFunction -> v57, v58
        v59 <- LoadInteger '2628'
        v60 <- CreateNamedVariable 'BigUint64Array', 'none'
        v61 <- Construct v60, [v59]
        v62 <- CreateNamedVariable 'SyntaxError', 'none'
        Reassign v61, v62
        v63 <- BeginPlainFunction -> 
            v64 <- LoadFloat '4.0'
            v65 <- LoadString 'flags'
            v66 <- LoadInteger '65537'
            BeginObjectLiteral
                ObjectLiteralAddProperty `e`, v66
                ObjectLiteralAddProperty `f`, v64
                ObjectLiteralSetPrototype v65
                ObjectLiteralAddProperty `d`, v66
                BeginObjectLiteralComputedMethod v65 -> v67, v68, v69
                EndObjectLiteralComputedMethod
            v70 <- EndObjectLiteral
            Return v70
        EndPlainFunction
        v71 <- CallFunction v63, []
        BeginForInLoop v71 -> v72
        EndForInLoop
        v73 <- Await v63
        Return v73
    EndAsyncFunction
    v74 <- CallFunction v56, [v43, v38]
    Return v55
EndPlainFunction
v75 <- CreateNamedVariable 'Symbol', 'none'
v76 <- GetProperty v75, 'iterator'
BeginObjectLiteral
    BeginObjectLiteralComputedMethod v76 -> v77
        v78 <- LoadInteger '10'
        BeginObjectLiteral
            BeginObjectLiteralMethod `next` -> v79
                v80 <- UnaryOperation v78, '--'
                v81 <- LoadInteger '0'
                v82 <- Compare v78, '==', v81
                BeginObjectLiteral
                    ObjectLiteralAddProperty `done`, v82
                    ObjectLiteralAddProperty `value`, v78
                v83 <- EndObjectLiteral
                Return v83
            EndObjectLiteralMethod
        v84 <- EndObjectLiteral
        Return v84
    EndObjectLiteralComputedMethod
v85 <- EndObjectLiteral
BeginRepeatLoop '100' -> v86
    v87 <- CallFunction v41, [v86, v25]
EndRepeatLoop
v88 <- BeginPlainFunction -> v89, v90, v91, v92
    v93 <- CreateNamedVariable 'Uint8Array', 'none'
    v94 <- LoadString 'function'
    v95 <- BinaryOperation v93, '/', v94
    Return v27
EndPlainFunction
v96 <- CallFunction v88, [v30, v3, v39, v29]
v97 <- CallFunction v41, [v38, v0]
BeginRepeatLoop '100' -> v98
    v99 <- CallFunction v41, [v98, v36]
EndRepeatLoop
v100 <- CreateNamedVariable 'Int16Array', 'none'
v101 <- Construct v100, []
v102 <- CreateNamedVariable 'Math', 'none'
v103 <- LoadInteger '328449041'
v104 <- BinaryOperation v37, '<<', v25
v105 <- BinaryOperation v25, '>>', v104
v106 <- UnaryOperation '++', v105
v107 <- BinaryOperation v103, '+', v103
v108 <- BinaryOperation v104, '^', v105
v109 <- CallFunction v41, [v88, v25]


// ===== [ Program C6690831-1403-4062-B969-8089A30CE0B1 ] =====
// Mutating 4E6C8771-FB97-4F0A-976D-A905C92E6EB0 with ProbingMutator
// RUNNER ARGS: ../gecko-dev/obj-fuzzbuild/dist/bin/js --baseline-warmup-threshold=10 --ion-warmup-threshold=100 --ion-check-range-analysis --ion-extra-checks --fuzzing-safe --disable-oom-functions --reprl
v0 <- CreateNamedVariable 'Intl', 'none'
v1 <- GetProperty v0, 'Segmenter'
v2 <- Construct v1, []
v3 <- CreateNamedVariable 'segmenter', 'let', v2
v4 <- LoadUndefined
v5 <- CallMethod v3, 'segment', [v4]
// Probing value v5
// Probing finished
v6 <- CreateNamedVariable 'segments', 'let', v5
BeginForOfLoop v6 -> v7
    v8 <- CreateNamedVariable 'gc', 'none'
    v9 <- CallFunction v8, []
    Reassign v6, v9
EndForOfLoop
v10 <- BeginClassDefinition
    BeginClassPrivateStaticMethod 'valueOf' -> v11, v12, v13
        SetSuperProperty 'd', v13
        v14 <- BinaryOperation v11, '>>', v2
        v15 <- CreateNamedVariable 'Math', 'none'
        v16 <- LoadInteger '-1659061981'
        v17 <- LoadInteger '-9'
        v18 <- UnaryOperation '++', v16
        v19 <- UnaryOperation '~', v0
        v20 <- CallMethod v15, 'tanh', [v0]
        v21 <- CallMethod v15, 'pow', [v18, v18]
        v22 <- BinaryOperation v0, '**', v17
        v23 <- BinaryOperation v18, '*', v22
        v24 <- BinaryOperation v16, '*', v18
        Return v21
    EndClassPrivateStaticMethod
EndClassDefinition
v25 <- Construct v10, []
// Probing value v25
v26 <- BeginPlainFunction -> v27
    // Splicing instruction 8 (Construct) from D5E019CB-684A-4D92-9E47-52501FC186DA
    v28 <- LoadInteger '1000'
    v29 <- CreateNamedVariable 'BigInt64Array', 'none'
    v30 <- Construct v29, [v28]
    // Splicing done
    Return v2
EndPlainFunction
SetProperty v25, 'valueOf', v26
// Probing finished
v31 <- Construct v10, []
v32 <- Construct v10, []
v33 <- LoadInteger '1729'
v34 <- CreateNamedVariable 'Int32Array', 'none'
v35 <- Construct v34, [v33]
v36 <- LoadInteger '171'
v37 <- CreateNamedVariable 'Int16Array', 'none'
v38 <- Construct v37, [v36]
v39 <- LoadInteger '8'
v40 <- CreateNamedVariable 'Int32Array', 'none'
v41 <- Construct v40, [v39]
v42 <- LoadInteger '512'
v43 <- CreateNamedVariable 'Math', 'none'
v44 <- UnaryOperation '+', v42
v45 <- CallMethod v43, 'acosh', [v44]
[v34,v10] <- DestructArrayAndReassign v38
v46 <- BeginPlainFunction -> v47, v48
    v49 <- LoadInteger '1'
    v50 <- LoadInteger '65537'
    v51 <- CreateNamedVariable 'Map', 'none'
    v52 <- CallFunctionWithSpread (guarded) v51, [v49, ...v50]
    v53 <- LoadString 'JpC'
    v54 <- LoadString 'unscopables'
    v55 <- LoadString 'EPSILON'
    v56 <- BeginConstructor -> v57
    EndConstructor
    v58 <- CreateArray [v56]
    // Probing value v58
    v59 <- BeginPlainFunction -> v60
        // Executing code generator BinaryOperationGenerator
        v61 <- BinaryOperation v60, '-', v39
        // Code generator finished
    EndPlainFunction
    ConfigureElement v58, '3', 'PropertyFlags(rawValue: 6)', 'setter' [["v59"]]
    // Probing finished
    SetElement v58, '3', v39
    v62 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
    v63 <- CallFunction (guarded) v62, []
    v64 <- BeginAsyncFunction -> v65, v66
        v67 <- LoadInteger '2628'
        v68 <- CreateNamedVariable 'BigUint64Array', 'none'
        v69 <- Construct v68, [v67]
        v70 <- CreateNamedVariable 'SyntaxError', 'none'
        Reassign v69, v70
        v71 <- BeginPlainFunction -> 
            v72 <- LoadFloat '4.0'
            v73 <- LoadString 'flags'
            v74 <- LoadInteger '65537'
            BeginObjectLiteral
                ObjectLiteralAddProperty `e`, v74
                ObjectLiteralAddProperty `f`, v72
                ObjectLiteralSetPrototype v73
                ObjectLiteralAddProperty `d`, v74
                BeginObjectLiteralComputedMethod v73 -> v75, v76, v77
                EndObjectLiteralComputedMethod
            v78 <- EndObjectLiteral
            Return v78
        EndPlainFunction
        // Probing value v71
        v79 <- BeginPlainFunction -> v80
            // Executing code generator BinaryOperationGenerator
            v81 <- BinaryOperation v40, '^', v4
            // Code generator finished
            // Executing code generator ObjectHierarchyGenerator
            BeginObjectLiteral
            v82 <- EndObjectLiteral
            SetProperty v82, 'g', v80
            BeginObjectLiteral
            v83 <- EndObjectLiteral
            SetProperty v83, 'g', v80
            SetProperty v83, 'c', v81
            BeginObjectLiteral
            v84 <- EndObjectLiteral
            SetProperty v84, 'g', v80
            SetProperty v84, 'c', v81
            SetProperty v84, 'h', v65
            BeginObjectLiteral
            v85 <- EndObjectLiteral
            SetProperty v85, 'g', v80
            SetProperty v85, 'c', v81
            SetProperty v85, 'f', v67
            // Code generator finished
            Return v82
        EndPlainFunction
        ConfigureProperty v71, 'then', 'PropertyFlags(rawValue: 6)', 'value' [["v79"]]
        // Probing finished
        v86 <- CallFunction v71, []
        BeginForInLoop v86 -> v87
        EndForInLoop
        v88 <- Await v71
        Return v88
    EndAsyncFunction
    v89 <- CallFunction v64, [v48, v43]
    Return v63
EndPlainFunction
v90 <- CreateNamedVariable 'Symbol', 'none'
v91 <- GetProperty v90, 'iterator'
BeginObjectLiteral
    BeginObjectLiteralComputedMethod v91 -> v92
        v93 <- LoadInteger '10'
        BeginObjectLiteral
            BeginObjectLiteralMethod `next` -> v94
                v95 <- UnaryOperation v93, '--'
                v96 <- LoadInteger '0'
                v97 <- Compare v93, '==', v96
                BeginObjectLiteral
                    ObjectLiteralAddProperty `done`, v97
                    ObjectLiteralAddProperty `value`, v93
                v98 <- EndObjectLiteral
                Return v98
            EndObjectLiteralMethod
        v99 <- EndObjectLiteral
        Return v99
    EndObjectLiteralComputedMethod
v100 <- EndObjectLiteral
BeginRepeatLoop '100' -> v101
    v102 <- CallFunction v46, [v101, v25]
EndRepeatLoop
v103 <- BeginPlainFunction -> v104, v105, v106, v107
    v108 <- CreateNamedVariable 'Uint8Array', 'none'
    v109 <- LoadString 'function'
    v110 <- BinaryOperation v108, '/', v109
    Return v32
EndPlainFunction
v111 <- CallFunction v103, [v35, v3, v44, v34]
v112 <- CallFunction v46, [v43, v0]
BeginRepeatLoop '100' -> v113
    v114 <- CallFunction v46, [v113, v41]
EndRepeatLoop
v115 <- CreateNamedVariable 'Int16Array', 'none'
v116 <- Construct v115, []
v117 <- CreateNamedVariable 'Math', 'none'
v118 <- LoadInteger '328449041'
v119 <- BinaryOperation v42, '<<', v25
v120 <- BinaryOperation v25, '>>', v119
v121 <- UnaryOperation '++', v120
v122 <- BinaryOperation v118, '+', v118
v123 <- BinaryOperation v119, '^', v120
v124 <- CallFunction v46, [v103, v25]
// Program may be interesting due to new coverage: 152 newly discovered edges in the CFG of the target


// ===== [ Program AAF16C21-D5D7-49BA-835E-B1C431462862 ] =====
// Mutating C6690831-1403-4062-B969-8089A30CE0B1 with CodeGenMutator
// RUNNER ARGS: ../gecko-dev/obj-fuzzbuild/dist/bin/js --baseline-warmup-threshold=10 --ion-warmup-threshold=100 --ion-check-range-analysis --ion-extra-checks --fuzzing-safe --disable-oom-functions --reprl
v0 <- CreateNamedVariable 'Intl', 'none'
v1 <- GetProperty v0, 'Segmenter'
v2 <- Construct v1, []
v3 <- CreateNamedVariable 'segmenter', 'let', v2
v4 <- LoadUndefined
v5 <- CallMethod v3, 'segment', [v4]
v6 <- CreateNamedVariable 'segments', 'let', v5
BeginForOfLoop v6 -> v7
    v8 <- CreateNamedVariable 'gc', 'none'
    v9 <- CallFunction v8, []
    Reassign v6, v9
EndForOfLoop
v10 <- BeginClassDefinition
    BeginClassPrivateStaticMethod 'valueOf' -> v11, v12, v13
        SetSuperProperty 'd', v13
        v14 <- BinaryOperation v11, '>>', v2
        v15 <- CreateNamedVariable 'Math', 'none'
        v16 <- LoadInteger '-1659061981'
        v17 <- LoadInteger '-9'
        v18 <- UnaryOperation '++', v16
        v19 <- UnaryOperation '~', v0
        v20 <- CallMethod v15, 'tanh', [v0]
        v21 <- CallMethod v15, 'pow', [v18, v18]
        v22 <- BinaryOperation v0, '**', v17
        v23 <- BinaryOperation v18, '*', v22
        v24 <- BinaryOperation v16, '*', v18
        Return v21
    EndClassPrivateStaticMethod
EndClassDefinition
v25 <- Construct v10, []
v26 <- BeginPlainFunction -> v27
    v28 <- LoadInteger '1000'
    v29 <- CreateNamedVariable 'BigInt64Array', 'none'
    v30 <- Construct v29, [v28]
    Return v2
EndPlainFunction
SetProperty v25, 'valueOf', v26
v31 <- Construct v10, []
v32 <- Construct v10, []
v33 <- LoadInteger '1729'
v34 <- CreateNamedVariable 'Int32Array', 'none'
// Executing code generator MethodCallWithDifferentThisGenerator
// Code generator finished
// Executing code generator ReassignmentGenerator
Reassign v31, v10
// Code generator finished
// Executing code generator FunctionCallWithSpreadGenerator
v35 <- CallFunctionWithSpread (guarded) v1, [v6, v6, v10, v4]
// Code generator finished
// Executing code generator BinaryOperationGenerator
v36 <- BinaryOperation v0, '&', v33
// Code generator finished
// Executing code generator BinaryOperationGenerator
v37 <- BinaryOperation v0, '&', v10
// Code generator finished
// Executing code generator TrivialFunctionGenerator
v38 <- BeginPlainFunction -> 
    Return v31
EndPlainFunction
// Code generator finished
v39 <- Construct v34, [v33]
v40 <- LoadInteger '171'
v41 <- CreateNamedVariable 'Int16Array', 'none'
v42 <- Construct v41, [v40]
v43 <- LoadInteger '8'
v44 <- CreateNamedVariable 'Int32Array', 'none'
v45 <- Construct v44, [v43]
v46 <- LoadInteger '512'
v47 <- CreateNamedVariable 'Math', 'none'
v48 <- UnaryOperation '+', v46
v49 <- CallMethod v47, 'acosh', [v48]
[v34,v10] <- DestructArrayAndReassign v42
v50 <- BeginPlainFunction -> v51, v52
    v53 <- LoadInteger '1'
    v54 <- LoadInteger '65537'
    v55 <- CreateNamedVariable 'Map', 'none'
    v56 <- CallFunctionWithSpread (guarded) v55, [v53, ...v54]
    v57 <- LoadString 'JpC'
    v58 <- LoadString 'unscopables'
    v59 <- LoadString 'EPSILON'
    v60 <- BeginConstructor -> v61
    EndConstructor
    v62 <- CreateArray [v60]
    v63 <- BeginPlainFunction -> v64
        v65 <- BinaryOperation v64, '-', v43
    EndPlainFunction
    ConfigureElement v62, '3', 'PropertyFlags(rawValue: 6)', 'setter' [["v63"]]
    SetElement v62, '3', v43
    v66 <- CreateNamedVariable 'Uint8ClampedArray', 'none'
    v67 <- CallFunction (guarded) v66, []
    v68 <- BeginAsyncFunction -> v69, v70
        v71 <- LoadInteger '2628'
        v72 <- CreateNamedVariable 'BigUint64Array', 'none'
        v73 <- Construct v72, [v71]
        v74 <- CreateNamedVariable 'SyntaxError', 'none'
        Reassign v73, v74
        v75 <- BeginPlainFunction -> 
            v76 <- LoadFloat '4.0'
            v77 <- LoadString 'flags'
            v78 <- LoadInteger '65537'
            BeginObjectLiteral
                ObjectLiteralAddProperty `e`, v78
                ObjectLiteralAddProperty `f`, v76
                ObjectLiteralSetPrototype v77
                ObjectLiteralAddProperty `d`, v78
                BeginObjectLiteralComputedMethod v77 -> v79, v80, v81
                EndObjectLiteralComputedMethod
            v82 <- EndObjectLiteral
            Return v82
        EndPlainFunction
        v83 <- BeginPlainFunction -> v84
            v85 <- BinaryOperation v44, '^', v4
            BeginObjectLiteral
            v86 <- EndObjectLiteral
            SetProperty v86, 'g', v84
            BeginObjectLiteral
            v87 <- EndObjectLiteral
            SetProperty v87, 'g', v84
            SetProperty v87, 'c', v85
            BeginObjectLiteral
            v88 <- EndObjectLiteral
            SetProperty v88, 'g', v84
            SetProperty v88, 'c', v85
            SetProperty v88, 'h', v69
            BeginObjectLiteral
            v89 <- EndObjectLiteral
            SetProperty v89, 'g', v84
            SetProperty v89, 'c', v85
            SetProperty v89, 'f', v71
            Return v86
        EndPlainFunction
        ConfigureProperty v75, 'then', 'PropertyFlags(rawValue: 6)', 'value' [["v83"]]
        v90 <- CallFunction v75, []
        BeginForInLoop v90 -> v91
        EndForInLoop
        v92 <- Await v75
        Return v92
    EndAsyncFunction
    v93 <- CallFunction v68, [v52, v47]
    Return v67
EndPlainFunction
v94 <- CreateNamedVariable 'Symbol', 'none'
v95 <- GetProperty v94, 'iterator'
BeginObjectLiteral
    BeginObjectLiteralComputedMethod v95 -> v96
        v97 <- LoadInteger '10'
        BeginObjectLiteral
            BeginObjectLiteralMethod `next` -> v98
                v99 <- UnaryOperation v97, '--'
                v100 <- LoadInteger '0'
                v101 <- Compare v97, '==', v100
                BeginObjectLiteral
                    ObjectLiteralAddProperty `done`, v101
                    ObjectLiteralAddProperty `value`, v97
                v102 <- EndObjectLiteral
                Return v102
            EndObjectLiteralMethod
        v103 <- EndObjectLiteral
        Return v103
    EndObjectLiteralComputedMethod
v104 <- EndObjectLiteral
BeginRepeatLoop '100' -> v105
    v106 <- CallFunction v50, [v105, v25]
EndRepeatLoop
v107 <- BeginPlainFunction -> v108, v109, v110, v111
    v112 <- CreateNamedVariable 'Uint8Array', 'none'
    v113 <- LoadString 'function'
    v114 <- BinaryOperation v112, '/', v113
    Return v32
EndPlainFunction
v115 <- CallFunction v107, [v39, v3, v48, v34]
v116 <- CallFunction v50, [v47, v0]
BeginRepeatLoop '100' -> v117
    v118 <- CallFunction v50, [v117, v45]
EndRepeatLoop
v119 <- CreateNamedVariable 'Int16Array', 'none'
v120 <- Construct v119, []
v121 <- CreateNamedVariable 'Math', 'none'
v122 <- LoadInteger '328449041'
v123 <- BinaryOperation v46, '<<', v25
v124 <- BinaryOperation v25, '>>', v123
v125 <- UnaryOperation '++', v124
v126 <- BinaryOperation v122, '+', v122
v127 <- BinaryOperation v123, '^', v124
v128 <- CallFunction v50, [v107, v25]
// Program may be interesting due to new coverage: 26 newly discovered edges in the CFG of the target


// ===== [ Program E3D07AC0-06AB-4019-98D6-986D41C31F15 ] =====
// Minimizing AAF16C21-D5D7-49BA-835E-B1C431462862
v0 <- CreateNamedVariable 'Intl', 'none'
v1 <- GetProperty v0, 'Segmenter'
v2 <- CallFunction (guarded) v1, [v1]
BeginRepeatLoop '10' -> v3
    v4 <- BeginConstructor -> v5
    EndConstructor
    v6 <- BeginPlainFunction -> v7
        Return v3
    EndPlainFunction
    ConfigureElement v4, '3', 'PropertyFlags(rawValue: 6)', 'setter' [["v6"]]
    v8 <- BeginPlainFunction -> 
        Return v1
    EndPlainFunction
    v9 <- BeginPlainFunction -> v10
        Return v10
    EndPlainFunction
    ConfigureProperty v8, 'then', 'PropertyFlags(rawValue: 6)', 'value' [["v9"]]
EndRepeatLoop
// Program is interesting due to new coverage: 4 newly discovered edges in the CFG of the target
// Imported program is interesting due to new coverage: 2 newly discovered edges in the CFG of the target


